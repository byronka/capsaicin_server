!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ACTION_CLIENT_SENDING_SERVER_VIDEO	capsaicin_server.c	/^#define ACTION_CLIENT_SENDING_SERVER_VIDEO /;"	d	file:
ACTION_CLIENT_WANTS_VIDEO	capsaicin_server.c	/^#define ACTION_CLIENT_WANTS_VIDEO /;"	d	file:
ACTION_TELL_CLIENT_SERVER_IS_READY	capsaicin_server.c	/^#define ACTION_TELL_CLIENT_SERVER_IS_READY /;"	d	file:
Accept	basic_io.c	/^Accept(int s, struct sockaddr * restrict addr, socklen_t * restrict addrlen) {$/;"	f
BACKLOG	basic_io.h	/^#define BACKLOG /;"	d
BUF_SIZE	capsaicin_server.c	/^#define BUF_SIZE /;"	d	file:
Bind	basic_io.c	/^Bind(int s, const struct sockaddr *addr, socklen_t addrlen) {$/;"	f
CC	Makefile	/^CC=gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS=-gstabs+ -DDEBUG -std=c99 -Wall -std=c99 -pedantic-errors$/;"	m
CTRL_MSG_SIZE	capsaicin_server.c	/^#define CTRL_MSG_SIZE /;"	d	file:
Close	basic_io.c	/^Close(int fd) {$/;"	f
Listen	basic_io.c	/^Listen(int s, int backlog) {$/;"	f
MAX_BUF	server_tester.c	/^#define MAX_BUF /;"	d	file:
OBJECTS	Makefile	/^OBJECTS = capsaicin_server.o ntwk_utils.o basic_io.o main.o$/;"	m
OK_MSG	capsaicin_server.c	/^#define OK_MSG /;"	d	file:
Open	basic_io.c	/^Open(const char *path, int flags, ...) {$/;"	f
Read	basic_io.c	/^Read(int fd, void *buf, size_t nbytes) {$/;"	f
SERVER_PORT_NUMBER	capsaicin_server.c	/^#define SERVER_PORT_NUMBER /;"	d	file:
Sendfile	basic_io.c	/^Sendfile(int fd, int s, off_t offset, size_t nbytes, $/;"	f
Socket	basic_io.c	/^Socket(int domain, int type, int protocol) {$/;"	f
VIDEO_PATH_BASE	capsaicin_server.c	/^#define VIDEO_PATH_BASE /;"	d	file:
Write	basic_io.c	/^Write(int fd, const void *buf, size_t nbytes) {$/;"	f
convert_ip_addr	ntwk_utils.c	/^convert_ip_addr (uint32_t number) {$/;"	f
fork_server	capsaicin_server.c	/^fork_server(int s, struct sockaddr_in sa) {$/;"	f
handle_accepted_socket	capsaicin_server.c	/^handle_accepted_socket(int socket) {$/;"	f
main	main.c	/^int main() {$/;"	f
main	server_tester.c	/^int main(int argc, char* argv[])$/;"	f
prepareSocketAddress	basic_io.c	/^prepareSocketAddress(struct sockaddr_in sa, int port) {$/;"	f
print_ip_addr_32_bit	ntwk_utils.c	/^print_ip_addr_32_bit (unsigned char* client_addr_c) {$/;"	f
read_from_stream_into_file	capsaicin_server.c	/^read_from_stream_into_file(int socket, int file) {$/;"	f
receive_file	capsaicin_server.c	/^receive_file(int socket, int id) {$/;"	f
run_server	capsaicin_server.c	/^int run_server() {$/;"	f
send_requested_file	capsaicin_server.c	/^send_requested_file(int socket, int id) {$/;"	f
simple_sendfile	basic_io.c	/^simple_sendfile(int fd, int s, int offset, int nbytes, off_t *sbytes) {$/;"	f
